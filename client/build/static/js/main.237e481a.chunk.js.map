{"version":3,"sources":["components/posts/AllPosts.js","components/posts/Details.js","components/posts/EditPost.js","components/posts/CreatePost.js","components/common/validation.js","components/common/Header.js","App.js","reportWebVitals.js","index.js"],"names":["AllPosts","useState","posts","setPosts","getPosts","console","log","fetch","then","res","json","data","catch","err","useEffect","Container","Form","Group","Label","Control","type","onChange","e","target","value","Axios","get","result","end","filter","post","title","toLowerCase","includes","description","postCategory","Table","striped","bordered","hover","map","to","_id","dangerouslySetInnerHTML","__html","Button","variant","as","Link","onClick","id","window","confirm","delete","Details","props","setPost","match","params","singlePost","className","EditPost","setTitle","setDescription","category","setCategory","history","useHistory","controlId","placeholder","editor","ClassicEditor","onReady","event","descriptionChange","getData","preventDefault","put","push","CreatePost","titleRef","useRef","descriptionRef","categoryRef","validate","setValidate","validated","noValidate","ref","required","Text","Feedback","errors","createPostError","current","Header","Navbar","bg","expand","Brand","Nav","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.237e481a.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Container, Table, Button, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nfunction AllPosts() {\r\n    const [posts, setPosts] = useState([]);\r\n    const getPosts = () => {\r\n        console.log(\"check\");\r\n        fetch(\"http://localhost:5000/posts\")\r\n            .then((res) => {\r\n                return res.json();\r\n            })\r\n            .then((data) => {\r\n                console.log(data);\r\n                setPosts(data.posts)\r\n            })\r\n            .catch(err => {\r\n                console.log(\"error !!!!!\", err);\r\n            })\r\n    }\r\n    const deletePost = (id) => {\r\n        if (window.confirm(\"are you sure you want to delete\")) {\r\n            Axios.delete(\"http://localhost:5000/posts/delete/\" + id).then((result) => {\r\n                console.log(result);\r\n                getPosts();\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            });\r\n            console.log('id is !!!!!!!!!!', id);\r\n        }\r\n    }\r\n    const handleSearch = (e) => {\r\n        console.log(e.target.value);\r\n        Axios.get(\"http://localhost:5000/posts\").then((result) => {\r\n            const end = result.data.posts.filter((post) => {\r\n                return  post.title.toLowerCase().includes(e.target.value) ||\r\n                        post.description.toLowerCase().includes(e.target.value) ||\r\n                        post.postCategory.toLowerCase().includes(e.target.value)\r\n            })\r\n            setPosts(end)\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, [])\r\n    return (\r\n        <Container>\r\n            <Form.Group>\r\n                <Form.Label>\r\n                    Search Here\r\n                </Form.Label>\r\n                <Form.Control type=\"text\" onChange={handleSearch} ></Form.Control>\r\n            </Form.Group>\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th>Post Category</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {posts.map((post) => (\r\n                        <>\r\n                            <tr key={post._id}>\r\n                                <td><Link to={`/details/${post._id}`}>{post.title}</Link></td>\r\n                                <td dangerouslySetInnerHTML={{ __html: post.description }}></td>\r\n                                <td>{post.postCategory}</td>\r\n                                <td><Button variant=\"primary\" as={Link} to={`/editpost/${post._id}`} >Edit</Button></td>\r\n                                <td><Button variant=\"danger\" onClick={() => deletePost(post._id)}>Delete</Button></td>\r\n                            </tr>\r\n                        </>\r\n                    )\r\n\r\n                    )}\r\n                </tbody>\r\n            </Table>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AllPosts\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Container } from 'react-bootstrap';\r\n\r\nfunction Details(props) {\r\n    const [post, setPost] = useState({});\r\n    const getPost = () => {\r\n        fetch(\"http://localhost:5000/posts/details/\" + props.match.params.id).then((data) => {\r\n            return data.json();\r\n        }).then((singlePost) => {\r\n            setPost(singlePost.post);\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getPost();\r\n    }, []);\r\n    return (\r\n        <Container>\r\n            <div className=\"details\">\r\n                <h1>Details of {post.title}</h1>\r\n                <p dangerouslySetInnerHTML={{__html: post.description}}></p>\r\n                <p>{post.postCategory}</p>\r\n\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction EditPost(props) {\r\n    const id = props.match.params.id;\r\n    const [title, setTitle] = useState();\r\n    const [description, setDescription] = useState();\r\n    const [category, setCategory] = useState();\r\n    const history = useHistory();\r\n    const getPost = () => {\r\n        Axios.get(`http://localhost:5000/posts/details/${id}`).then((result) => {\r\n            console.log(result.data.post);\r\n            setTitle(result.data.post.title)\r\n            setDescription(result.data.post.description)\r\n            setCategory(result.data.post.postCategory)\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    const titleChange = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n    const descriptionChange = (data) => {\r\n        setDescription(data)\r\n    }\r\n    const categoryChange = (e) => {\r\n        setCategory(e.target.value)\r\n    }\r\n    const updatePost = (e) => {\r\n        e.preventDefault();\r\n        const data = {\r\n            title,\r\n            description,\r\n            postCategory: category\r\n        }\r\n        Axios.put(`http://localhost:5000/posts/update/${id}`, data).then((result) => {\r\n            console.log(result);\r\n            history.push(\"/\");\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPost();\r\n    }, []);\r\n    return (\r\n        <Container>\r\n            <Form>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                    <Form.Label>Enter Title</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter Title\" value={title ? title : ''} onChange={titleChange} />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Description</Form.Label>\r\n                    <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={description}\r\n                        onReady={editor => {\r\n                            // You can store the \"editor\" and use when it is needed.\r\n                            console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                            const data = editor.getData();\r\n                            descriptionChange(data)\r\n                        }}\r\n                        \r\n\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPostCategory\">\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Category\" value={category ? category : ''} onChange={categoryChange} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" onClick={updatePost}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default EditPost\r\n","import React, { useRef, useState } from 'react'\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport Axios from 'axios'\r\nimport { useHistory } from 'react-router';\r\nimport { createPostError } from './../common/validation';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nfunction CreatePost() {\r\n    const history = useHistory();\r\n    const titleRef = useRef();\r\n    const descriptionRef = useRef();\r\n    const categoryRef = useRef();\r\n\r\n    // states\r\n    const [validate, setValidate] = useState(false);\r\n    const [description, setDescription] = useState()\r\n    const descriptionChange = (data) => {\r\n        setDescription(data)\r\n    }\r\n    \r\n    const createPost = (e) => {\r\n        setValidate(true)\r\n        e.preventDefault();\r\n        \r\n        const err = createPostError(titleRef.current.value, description, categoryRef.current.value)\r\n        if (err.title === '' && err.description === '' && err.category === '') {\r\n            let data = {\r\n                title: titleRef.current.value,\r\n                description: description,\r\n                postCategory: categoryRef.current.value\r\n            }\r\n            Axios.post(\"http://localhost:5000/posts/add\", data).then((result) => {\r\n                console.log(result);\r\n                history.push('/');\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n        } else {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className=\"my-3 text-center\">Create New Post</h1>\r\n            <Form validated={validate} noValidate className=\"justify-content-start text-left\">\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicTitle\">\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Title\" ref={titleRef} required />\r\n                    <Form.Text className=\"text-muted\">\r\n                        Enter text of your post\r\n                    </Form.Text>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Please provide a valid title.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={description}\r\n                        onReady={editor => {\r\n                            // You can store the \"editor\" and use when it is needed.\r\n                            console.log('Editor is ready to use!', editor);\r\n                        }}\r\n                        onChange={(event, editor) => {\r\n                            const data = editor.getData();\r\n                            descriptionChange(data)\r\n                        }}\r\n                        ref={descriptionRef}\r\n                        \r\n                    />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicCategory\">\r\n                    <Form.Label>Post Category</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Post Category\" ref={categoryRef} required />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Please provide a valid state.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\" onClick={createPost}>\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n","export const createPostError = (title,description,category) => {\r\n    const errors = {};\r\n    errors.title = title ? '' : 'title is required';\r\n    errors.description = description ? '' : 'description is required';\r\n    errors.category = category ? '' : 'category is required';\r\n    return errors;\r\n}","import React from 'react'\r\nimport { Container, Navbar, Nav } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n    return (\r\n        <Container>\r\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n                <Container>\r\n                    <Navbar.Brand as={Link} to=\"/\">Home</Navbar.Brand>\r\n                    <Nav className=\"me-auto\">\r\n                        <Nav.Link as={Link} to=\"/createpost\">Create New Post</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/\">All Posts</Nav.Link>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport AllPosts from './components/posts/AllPosts';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Details from './components/posts/Details';\nimport EditPost from './components/posts/EditPost';\nimport CreatePost from './components/posts/CreatePost';\nimport Header from './components/common/Header';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/\" component={AllPosts} exact />\n          <Route path=\"/details/:id\" component={Details} />\n          <Route path=\"/editpost/:id\" component={EditPost} />\n          <Route path=\"/createpost\" component={CreatePost} />\n        </Switch>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}